{"version":3,"file":"static/js/29.74e92083.chunk.js","mappings":"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","sources":["pages/users/AddOfficeDialog.tsx","pages/users/OfficeList.tsx","pages/users/OfficerDialog.tsx","pages/users/AddSectionDialog.tsx","pages/users/OfficeSectionList.tsx","pages/users/index.tsx","../node_modules/@mui/icons-material/Business.js","../node_modules/@mui/icons-material/DeleteOutlineOutlined.js","../node_modules/@mui/icons-material/EditOutlined.js","../node_modules/@mui/icons-material/SupervisorAccountOutlined.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n// project imports\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// api\r\nimport { useMutation } from '@apollo/client';\r\nimport { \r\n    ADD_BIR_OFFICE, \r\n    DELETE_BIR_OFFICE, \r\n    UPDATE_BIR_OFFICE \r\n} from '../../api/offices';\r\nimport { BirOffices } from '../../api/threads/types';\r\n\r\ninterface AddOfficeDialogProps {\r\n    open: boolean;\r\n    office: BirOffices | null;\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nexport default function AddOfficeDialog(props: AddOfficeDialogProps) {\r\n    const [addBirOffice, { loading: addLoad }] = useMutation<{ addBirOffice: BirOffices }, {\r\n        data: {\r\n            officeName: string,\r\n            officeSections?: string[]    \r\n        }\r\n    }>(ADD_BIR_OFFICE);\r\n\r\n    const [updateBirOffice, { loading: updateLoad }] = useMutation<{ updateBirOffice: BirOffices }, {\r\n        officeId: number,\r\n        officeName: string\r\n    }>(UPDATE_BIR_OFFICE);\r\n\r\n    const [deleteBirOffice, { loading: deleteLoad }] = useMutation<{ deleteBirOffice: BirOffices }, {\r\n        officeId: number\r\n    }>(DELETE_BIR_OFFICE);\r\n\r\n    const [officeName, setOfficeName] = React.useState<string>(\"\");\r\n\r\n    React.useEffect(() => {\r\n        if (props.office) setOfficeName(props.office.officeName);\r\n    }, [props.office])\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => setOfficeName(event.target.value);\r\n    \r\n    const handleSubmitOffice = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await addBirOffice({\r\n            variables: {\r\n                data: {\r\n                    officeName: officeName,\r\n                    officeSections: ['default']\r\n                }\r\n            }\r\n        })\r\n\r\n        setOfficeName(\"\");\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleUpdateOffice = async () => {\r\n        if (props.office) {\r\n            await updateBirOffice({\r\n                variables: {\r\n                    officeId: props.office.officeId,\r\n                    officeName: officeName\r\n                }\r\n            })\r\n    \r\n            setOfficeName(\"\");\r\n            props.onSubmit();\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    const handleDeleteOffice = async () => {\r\n       if (props.office) {\r\n            await deleteBirOffice({\r\n                variables: {\r\n                    officeId: props.office.officeId\r\n                }\r\n            })\r\n\r\n            setOfficeName(\"\");\r\n            props.onSubmit();\r\n            props.onClose();\r\n       }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LoadOverlay open={addLoad || updateLoad || deleteLoad} />\r\n            <Dialog open={props.open} onClose={props.onClose} maxWidth=\"md\">\r\n                <form onSubmit={handleSubmitOffice}>\r\n                    <DialogTitle>{props.office ? \"Edit Office\" : \"Add Office\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            name=\"officeName\"\r\n                            label=\"Office Name\"\r\n                            value={officeName}\r\n                            onChange={handleTextChange}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            required\r\n                            sx={{ width: 400 }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        {props.office ? (\r\n                            <>\r\n                                <Button onClick={props.onClose}>Cancel</Button>\r\n                                <Button onClick={handleUpdateOffice}>Update</Button>\r\n                                <Button \r\n                                    color='error' \r\n                                    onClick={handleDeleteOffice}\r\n                                    disabled={props.office && props.office.officeSections.filter(section => section.sectionName !== 'default').length > 0}\r\n                                >\r\n                                    Delete\r\n                                </Button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Button onClick={props.onClose}>Cancel</Button>\r\n                                <Button type=\"submit\">Add</Button>\r\n                            </>\r\n                        )}\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Paper from '@mui/material/Paper';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { useTheme } from '@mui/material/styles';\r\n// icons\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\n// project imports\r\nimport AddOfficeDialog from './AddOfficeDialog';\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// api\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ALL_BIR_OFFICES } from '../../api/offices';\r\nimport { BirOffices } from '../../api/threads/types';\r\n// redux\r\nimport { useAppSelector } from '../../redux/hooks';\r\n\r\n\r\ninterface OfficeListProps {\r\n    selected: number;\r\n    onSelect: (id: number) => void;\r\n}\r\n\r\nexport default function OfficeList(props: OfficeListProps) {\r\n    const theme = useTheme();\r\n    const { role } = useAppSelector((state) => state.auth);\r\n    const { data: offices, refetch } = useQuery<{ getAllBirOffices: BirOffices[] }>(GET_ALL_BIR_OFFICES);\r\n    const [officeDialog, setOfficeDialog] = React.useState<boolean>(false);\r\n    const [selected, setSelected] = React.useState<BirOffices | null>(null);\r\n\r\n    const handleToggleDialog = () => {\r\n        setOfficeDialog(!officeDialog);\r\n        setSelected(null);\r\n    }\r\n\r\n    const handleRefresh = () => refetch();\r\n    \r\n    const handleEditOffice = (office: BirOffices) => {\r\n        setSelected(office); \r\n        setOfficeDialog(true);\r\n    }\r\n\r\n    if (!offices) return <LoadOverlay open={true} />\r\n\r\n    return (\r\n        <Paper sx={{ width: \"100%\", height: '100%' }}>\r\n            <Box \r\n                sx={{ \r\n                    p: 2, \r\n                    display: 'flex', \r\n                    flexDirection: 'row', \r\n                    justifyContent: 'space-between', \r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <Typography variant='h6'>BIR Offices</Typography>\r\n                {role && role.superuser && (\r\n                    <Button variant='contained' onClick={handleToggleDialog}>Add Office</Button>\r\n                )}\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <List \r\n                sx={{ \r\n                    width: '100%', \r\n                    maxHeight: 'calc(100vh - 170px)', \r\n                    overflowY: 'auto',\r\n                    \"::-webkit-scrollbar\": {\r\n                    height: \"8px\",\r\n                    width: \"8px\"\r\n                    },\r\n\r\n                    /* Track */\r\n                    \"::-webkit-scrollbar-track\": {\r\n                        background: theme.palette.grey[300] \r\n                    },\r\n                    \r\n                    /* Handle */\r\n                    \"::-webkit-scrollbar-thumb\": {\r\n                        background: theme.palette.secondary.dark\r\n                    },\r\n                    \r\n                    /* Handle on hover */\r\n                    \"::-webkit-scrollbar-thumb:hover\": {\r\n                        background: theme.palette.primary.dark\r\n                    }\r\n                }}>\r\n\r\n                {offices.getAllBirOffices.length === 0 && (\r\n                     <Box sx={{ display: 'flex', height: 300, justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                        <BusinessIcon color='secondary' sx={{ fontSize: 64, mb: 1 }} />\r\n                        <Typography variant=\"subtitle1\">\r\n                            No Office Yet\r\n                        </Typography>\r\n                        <Typography variant=\"body1\">\r\n                            Create an office\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                {offices.getAllBirOffices.map(office => (\r\n                    <ListItem key={office.officeId} secondaryAction={role && role.superuser && (\r\n                        <IconButton onClick={() => handleEditOffice(office)}>\r\n                            <EditOutlinedIcon />\r\n                        </IconButton>\r\n                    )}>\r\n                        <ListItemButton \r\n                            alignItems=\"flex-start\" \r\n                            selected={office.officeId === props.selected}\r\n                            onClick={() => props.onSelect(office.officeId)}\r\n                        >\r\n                            <ListItemText\r\n                                primary={\r\n                                    <Box>\r\n                                        <Typography variant='body1'>\r\n                                            {office.officeName}\r\n                                        </Typography>\r\n                                        <Typography variant='caption' gutterBottom>\r\n                                            {office.refNum ? office.refNum : \"RR-6\"}\r\n                                        </Typography>\r\n                                    </Box>\r\n                                }\r\n                            />\r\n                        </ListItemButton>\r\n                        <Divider />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n\r\n            <AddOfficeDialog \r\n                open={officeDialog} \r\n                office={selected}\r\n                onClose={handleToggleDialog} \r\n                onSubmit={handleRefresh} \r\n            />\r\n        </Paper>\r\n    )   \r\n}","import React from 'react';\r\n// mui\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n// icons\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\n// api\r\nimport { useMutation } from '@apollo/client';\r\nimport { BirOffices, OfficeSections, UserAccounts } from '../../api/threads/types';\r\nimport { DELETE_OFFICER, REGISTER_OFFICER, UPDATE_OFFICER } from '../../api/offices';\r\n\r\ninterface AccountRegister {\r\n    accountId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    roleId: number;\r\n    resetCode: string | null;\r\n    officeId: number;\r\n}\r\n\r\ninterface AddOfficerDrawerProps {\r\n    open: boolean;\r\n    section: OfficeSections;\r\n    office: BirOffices;\r\n    officer: UserAccounts | null;\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nexport default function OfficerDrawer(props: AddOfficerDrawerProps) {\r\n    const [registerOfficer] = useMutation(REGISTER_OFFICER);\r\n    const [updateOfficer] = useMutation(UPDATE_OFFICER);\r\n    const [deleteOfficer] = useMutation(DELETE_OFFICER);\r\n    const [deleteMode, setDeleteMode] = React.useState<boolean>(false);\r\n    const [formData, setFormData] = React.useState<AccountRegister>({\r\n        accountId: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        officeId: props.section.sectionId,\r\n        roleId: props.section.positions ? props.section.positions[0].roleId : 0,\r\n        resetCode: null\r\n    })\r\n    const { firstName, lastName, roleId, resetCode, officeId, accountId } = formData;\r\n\r\n    React.useEffect(() => {\r\n        if (props.officer) {\r\n            setFormData({\r\n                accountId: props.officer.accountId,\r\n                firstName: props.officer.firstName,\r\n                lastName: props.officer.lastName,\r\n                officeId: props.section.sectionId,\r\n                roleId: props.officer.role.roleId,\r\n                resetCode: props.officer.resetCode\r\n            })\r\n        }\r\n    }, [props.officer, props.section])\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const handleSubmitOfficer = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await registerOfficer({\r\n            variables: {\r\n                data: {\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    officeId: officeId,\r\n                    roleId: roleId\r\n                }\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            roleId: 9,\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleUpdateOfficer = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await updateOfficer({\r\n            variables: {\r\n                data: {\r\n                    accountId: accountId,\r\n                    firstName: firstName,\r\n                    lastName: lastName,\r\n                    roleId: roleId\r\n                }\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            roleId: 9,\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleConfirmDelete = () => setDeleteMode(!deleteMode);\r\n\r\n    const handleDeleteOfficer = async () => {\r\n        await deleteOfficer({\r\n            variables: {\r\n                accountId: accountId\r\n            }\r\n        })\r\n\r\n        setFormData({\r\n            accountId: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            officeId: props.section.sectionId,\r\n            roleId: 9,\r\n            resetCode: null\r\n        })\r\n\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onClose} maxWidth='md'>\r\n            <DialogTitle>\r\n                {deleteMode ? (\r\n                    <Typography variant='h6'>\r\n                        {`Are you sure you want to delete ${props.officer?.firstName}?`}\r\n                    </Typography>\r\n                ) : (\r\n                    <Stack direction='row' justifyContent='space-between'>\r\n                        <Typography variant='h6'>\r\n                            {props.officer ? \"Update Officer\" : \"Register Officer\"}\r\n                        </Typography>\r\n                        \r\n                        {props.officer && (\r\n                            <IconButton color='error' onClick={handleConfirmDelete}>\r\n                                <DeleteOutlineOutlinedIcon />\r\n                            </IconButton>\r\n                        )}\r\n                    </Stack>\r\n                )}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {deleteMode ? (\r\n                    <Stack spacing={3} sx={{ width: 500, mt: 2 }}>\r\n                        <Typography variant='body1'>\r\n                            This action cannot be undone.\r\n                        </Typography>\r\n                        <Stack spacing={1} direction='row' justifyContent='flex-end'>\r\n                            <Button \r\n                                variant='contained'\r\n                                onClick={handleDeleteOfficer}\r\n                                fullWidth\r\n                                color='error'\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n\r\n                            <Button \r\n                                variant='outlined'\r\n                                onClick={handleConfirmDelete}\r\n                                fullWidth\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </Stack>\r\n                    </Stack>\r\n                ) : (\r\n                    <Stack component='form' onSubmit={props.officer ? handleUpdateOfficer : handleSubmitOfficer} spacing={3} sx={{ width: 500, mt: 2 }}>\r\n                        <TextField \r\n                            name='firstName'\r\n                            label='First Name'\r\n                            value={firstName}\r\n                            onChange={handleTextChange}\r\n                            required\r\n                        />\r\n\r\n                        <TextField \r\n                            name='lastName'\r\n                            label='Last Name'\r\n                            value={lastName}\r\n                            onChange={handleTextChange}\r\n                            required\r\n                        />\r\n\r\n                        <TextField \r\n                            name='Office'\r\n                            label='Office'\r\n                            value={props.office.officeName}\r\n                            required\r\n                        />\r\n\r\n                        {props.section.sectionName !== \"default\" && (\r\n                            <TextField \r\n                                name='section'\r\n                                label='Section'\r\n                                value={props.section.sectionName}\r\n                                required\r\n                            />\r\n                        )}\r\n\r\n                        {props.section.positions && (\r\n                            <TextField \r\n                                name='roleId'\r\n                                label='Position'\r\n                                value={roleId}\r\n                                onChange={handleTextChange}\r\n                                fullWidth\r\n                                required\r\n                                select\r\n                            >\r\n                                {props.section.positions.map(role => (\r\n                                    <MenuItem key={role.roleId} value={role.roleId}>{role.roleName}</MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        )}\r\n\r\n                        {resetCode && (\r\n                            <TextField \r\n                                name='resetCode'\r\n                                label='Reset/Registration Code'\r\n                                value={resetCode}\r\n                            />\r\n                        )}\r\n                    \r\n\r\n                        <Stack spacing={1}>\r\n                            <Button \r\n                                type='submit'\r\n                                variant='contained'\r\n                                fullWidth\r\n                            >\r\n                                {props.officer ? \"Update\" : \"Register\"}\r\n                            </Button>\r\n\r\n                            <Button \r\n                                variant='outlined'\r\n                                onClick={props.onClose}\r\n                                fullWidth\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </Stack>\r\n\r\n                    </Stack>\r\n                )}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import React from 'react';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n// project imports\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// api\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { \r\n    ADD_SECTION_OFFICE, \r\n    DELETE_SECTION_OFFICE, \r\n    GET_ALL_ROLES, \r\n    UPDATE_SECTION_OFFICE \r\n} from '../../api/offices';\r\nimport { OfficeSections, Roles } from '../../api/threads/types';\r\n\r\ninterface AddSectionDialogProps {\r\n    officeId: number;\r\n    section: OfficeSections | null;\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onSubmit: () => void;\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function AddSectionDialog(props: AddSectionDialogProps) {\r\n    const { data: roles } = useQuery<{ getAllRoles: Roles[] }>(GET_ALL_ROLES);\r\n    const [addOfficeSection, { loading: addLoad }] = useMutation<{ addOfficeSection: OfficeSections }, {\r\n        officeId: number,\r\n        sectionName: string,\r\n        positions: number[]\r\n    }>(ADD_SECTION_OFFICE);\r\n\r\n    const [updateOfficeSection, { loading: updateLoad }] = useMutation<{ updateSection: OfficeSections }, {\r\n        sectionId: number,\r\n        sectionName: string,\r\n        positions: number[]\r\n    }>(UPDATE_SECTION_OFFICE);\r\n\r\n    const [deleteOfficeSection, { loading: deleteLoad }] = useMutation<{ deleteOfficeSection: OfficeSections }, {\r\n        sectionId: number\r\n    }>(DELETE_SECTION_OFFICE);\r\n\r\n    const [sectionName, setSectionName] = React.useState<string>(\"\");\r\n    const [positions, setPositions]  = React.useState<string[]>([]);\r\n\r\n    React.useEffect(() => {\r\n        if (props.section) setSectionName(props.section.sectionName);\r\n    }, [props.section])\r\n\r\n    React.useEffect(() => {\r\n        if (props.section) {\r\n            setPositions(props.section.positions ? props.section.positions.map(pos => pos.roleId.toString()) : [])\r\n        }\r\n    }, [props.section])\r\n\r\n    const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => setSectionName(event.target.value);\r\n\r\n    const handlePositionChange = (event: SelectChangeEvent<typeof positions>) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setPositions(\r\n          // On autofill we get a stringified value.\r\n          typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n    \r\n    const handleSubmitOffice = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        await addOfficeSection({\r\n            variables: {\r\n                officeId: props.officeId,\r\n                sectionName: sectionName,\r\n                positions: positions.map(pos => parseInt(pos))\r\n            }\r\n        })\r\n\r\n        setSectionName(\"\");\r\n        props.onSubmit();\r\n        props.onClose();\r\n    }\r\n\r\n    const handleUpdateOffice = async () => {\r\n        if (props.section) {\r\n            await updateOfficeSection({\r\n                variables: {\r\n                    sectionId: props.section.sectionId,\r\n                    sectionName: sectionName,\r\n                    positions: positions.map(pos => parseInt(pos))\r\n                }\r\n            })\r\n\r\n            setSectionName(\"\");\r\n            props.onSubmit();\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    const handleDeleteSection = async () => {\r\n        if (props.section) {\r\n            await deleteOfficeSection({\r\n                variables: {\r\n                    sectionId: props.section.sectionId\r\n                }\r\n            })\r\n\r\n            setSectionName(\"\");\r\n            props.onSubmit();\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <LoadOverlay open={addLoad || updateLoad || deleteLoad} />\r\n            <Dialog open={props.open} onClose={props.onClose} maxWidth=\"md\">\r\n                <form onSubmit={handleSubmitOffice}>\r\n                    <DialogTitle>{props.section ? \"Edit Section\" : \"Add Section\"}</DialogTitle>\r\n                    <DialogContent>\r\n                       <Stack spacing={2} sx={{ my: 2 }}>\r\n                        <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                name=\"sectionName\"\r\n                                label=\"Section Name\"\r\n                                value={sectionName}\r\n                                onChange={handleTextChange}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                                required\r\n                                sx={{ width: 400 }}\r\n                            />\r\n                             <FormControl sx={{ maxWidth: 400 }}>\r\n                                <InputLabel id=\"demo-multiple-name-label\">Positions</InputLabel>\r\n                                <Select\r\n                                    multiple\r\n                                    value={positions}\r\n                                    onChange={handlePositionChange}\r\n                                    input={<OutlinedInput label=\"Positions\" />}\r\n                                    MenuProps={MenuProps}\r\n                                >\r\n                                    {roles && roles.getAllRoles.map(role => (\r\n                                        <MenuItem key={role.roleId} value={role.roleId}>{role.roleName}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                       </Stack>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        {props.section ? (\r\n                            <>\r\n                                <Button onClick={props.onClose}>Cancel</Button>\r\n                                <Button onClick={handleUpdateOffice}>Update</Button>\r\n                                <Button onClick={handleDeleteSection} color='error' disabled={props.section && props.section.officers.length > 0}>Delete</Button>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Button onClick={props.onClose}>Cancel</Button>\r\n                                <Button type=\"submit\">Add</Button>\r\n                            </>\r\n                        )}\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Divider from '@mui/material/Divider';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Grid from '@mui/material/Grid';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { BirOffices, OfficeSections, Roles, UserAccounts } from '../../api/threads/types';\r\n// icons\r\nimport SupervisorAccountOutlinedIcon from '@mui/icons-material/SupervisorAccountOutlined';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\n// api\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_BIR_OFFICE_BY_ID } from '../../api/offices';\r\nimport { LoadOverlay } from '../../components/Loaders';\r\n// project imports\r\nimport AddOfficerDrawer from './OfficerDialog';\r\nimport AddSectionDialog from './AddSectionDialog';\r\nimport { useAppSelector } from '../../redux/hooks';\r\n\r\n\r\ninterface OfficeSectionListProps {\r\n    officeId: number;\r\n}\r\n\r\nconst isAuthorized = (role: Roles | null, office: OfficeSections | null, sectionId: number, officeId: number): boolean => {\r\n    if (!role || !office) return false;\r\n    else if (role.superuser) return true;\r\n    else if (role.roleName === \"Section Chief\" && office.sectionId === sectionId) return true;\r\n    else if ((role.roleName === \"Revenue District Officer\" || role.roleName === \"Asst. Revenue District Officer\") && office.sectionOffice.officeId === officeId) return true;\r\n    else if ((role.roleName === \"Division Chief\" || role.roleName === \"Asst. Division Chief\") && office.sectionOffice.officeId === officeId) return true;\r\n\r\n    return false;\r\n}\r\n\r\nexport default function OfficeSectionList(props: OfficeSectionListProps) {\r\n    const theme = useTheme();\r\n    const { role, office: userOffice } = useAppSelector((state) => state.auth);\r\n    const { data: office, loading, refetch } = useQuery<{ getBirOfficeById: BirOffices }>(GET_BIR_OFFICE_BY_ID, { variables: {\r\n        officeId: props.officeId\r\n    }});\r\n    const [userDialog, setUserDialog] = React.useState<boolean>(false);\r\n    const [sectionDialog, setSectionDialog] = React.useState<boolean>(false);\r\n    const [selectedSection, setSelectedSection] = React.useState<OfficeSections | null>(null);\r\n    const [selectedUser, setSelectedUser] = React.useState<UserAccounts | null>(null);\r\n\r\n    if (!office) return <LoadOverlay open={loading} />\r\n\r\n    const reloadList = () => {\r\n        setSelectedSection(null);\r\n        refetch({ officeId: props.officeId });\r\n    }\r\n\r\n    const handleRegisterOfficer = (section: OfficeSections) => {\r\n        setSelectedSection(section);\r\n        setUserDialog(true);\r\n    }\r\n\r\n    const handleSelectUser = (user: UserAccounts, section: OfficeSections) => {\r\n        setSelectedSection(section);\r\n        setSelectedUser(user);\r\n        setUserDialog(true);\r\n    } \r\n\r\n    const handleCloseOfficerDialog = () => {\r\n        setSelectedSection(null);\r\n        setSelectedUser(null);\r\n        setUserDialog(false);\r\n    }\r\n\r\n    const handleToggleDialog = () => {\r\n        setSectionDialog(!sectionDialog);\r\n        setSelectedSection(null);\r\n    }\r\n\r\n    const handleUpdateSection = (section: OfficeSections) => {\r\n        setSelectedSection(section);\r\n        setSectionDialog(true);\r\n    } \r\n\r\n    return (\r\n        <Paper sx={{ width: \"100%\", height: '100%' }}>\r\n            <Box \r\n                sx={{ \r\n                    p: 2, \r\n                    display: 'flex', \r\n                    flexDirection: 'row', \r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <Typography variant='h6'>{`${office.getBirOfficeById.officeName} Sections`}</Typography>\r\n\r\n                {role && role.superuser && (\r\n                    <Button variant='contained' onClick={handleToggleDialog}>Add Section</Button>\r\n                )}\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <Grid \r\n                container   \r\n                spacing={3} \r\n                alignItems=\"stretch\" \r\n                sx={{ \r\n                    mt: 1,\r\n                    px: 2,\r\n                    pb: 2,\r\n                    width: '100%',\r\n                    maxHeight: 'calc(100vh - 170px)', \r\n                    overflowY: 'auto',\r\n                    \"::-webkit-scrollbar\": {\r\n                    height: \"8px\",\r\n                    width: \"8px\"\r\n                    },\r\n\r\n                    /* Track */\r\n                    \"::-webkit-scrollbar-track\": {\r\n                        background: theme.palette.grey[300] \r\n                    },\r\n                    \r\n                    /* Handle */\r\n                    \"::-webkit-scrollbar-thumb\": {\r\n                        background: theme.palette.secondary.dark\r\n                    },\r\n                    \r\n                    /* Handle on hover */\r\n                    \"::-webkit-scrollbar-thumb:hover\": {\r\n                        background: theme.palette.primary.dark\r\n                    }\r\n                }}>\r\n                \r\n                {office.getBirOfficeById.officeSections.map(section => (\r\n                    <Grid item md={6} key={section.sectionId}>\r\n                        <Card sx={{ width: '100%', height: '100%' }}>\r\n                            {isAuthorized(role, userOffice, section.sectionId, section.sectionOffice.officeId) ? (\r\n                                <CardHeader \r\n                                    title={section.sectionName === 'default' ? 'Admin' : section.sectionName}\r\n                                    action={\r\n                                       <>\r\n                                        {section.sectionName !== 'default' && (\r\n                                            <IconButton onClick={() => handleUpdateSection(section)}>\r\n                                                <EditOutlinedIcon />\r\n                                            </IconButton>\r\n                                        )}\r\n                                        <Button variant='contained' sx={{ ml: 2 }} onClick={() => handleRegisterOfficer(section)}>\r\n                                            Register\r\n                                        </Button>\r\n                                       </>\r\n                                    }\r\n                                />\r\n                            ) : (\r\n                                <CardHeader title={section.sectionName === 'default' ? 'Main' : section.sectionName} />\r\n                            )}\r\n                            <CardContent>\r\n                                <Divider />\r\n                                {section.officers.length === 0 && (\r\n                                    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n                                        <SupervisorAccountOutlinedIcon color='secondary' sx={{ fontSize: 48, my: 1 }} />\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            No Officer Registered\r\n                                        </Typography>\r\n                                        {isAuthorized(role, userOffice, section.sectionId, section.sectionOffice.officeId) && (\r\n                                            <Typography variant=\"body1\">\r\n                                                Click Register to Add Officers\r\n                                            </Typography>\r\n                                        )}\r\n                                    </Box>\r\n                                )}\r\n                                <List>\r\n                                    {section.officers.map(officer => (\r\n                                        <React.Fragment key={officer.accountId}>\r\n                                            <ListItemButton alignItems=\"flex-start\" onClick={\r\n                                                isAuthorized(role, userOffice, section.sectionId, section.sectionOffice.officeId) ? \r\n                                                    () => handleSelectUser(officer, section) : undefined}\r\n                                            >\r\n                                                <ListItemAvatar>\r\n                                                    <Avatar>\r\n                                                        {`${officer.firstName.charAt(0)}${officer.lastName.charAt(0)}`}\r\n                                                    </Avatar>\r\n                                                </ListItemAvatar>\r\n                                                <ListItemText\r\n                                                    primary={\r\n                                                        <Box>\r\n                                                            <Typography variant='body1'>\r\n                                                                {officer.firstName + ' ' + officer.lastName}\r\n                                                            </Typography>\r\n                                                            <Typography variant='caption' gutterBottom>\r\n                                                                {officer.role.roleName}\r\n                                                            </Typography>\r\n                                                        </Box>\r\n                                                    }\r\n                                                />\r\n                                            </ListItemButton>\r\n                                            <Divider variant=\"inset\" component=\"li\" />\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </List>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n\r\n                {selectedSection && (\r\n                    <AddOfficerDrawer \r\n                        open={userDialog}  \r\n                        section={selectedSection}\r\n                        officer={selectedUser}\r\n                        office={office.getBirOfficeById}\r\n                        onClose={handleCloseOfficerDialog}\r\n                        onSubmit={reloadList}\r\n                    />\r\n                )}\r\n            </Grid> \r\n\r\n            <AddSectionDialog \r\n                officeId={props.officeId}\r\n                section={selectedSection}\r\n                open={sectionDialog}\r\n                onSubmit={reloadList}\r\n                onClose={handleToggleDialog}\r\n            />\r\n        </Paper>\r\n    )\r\n}","import React from 'react';\r\n// mui\r\nimport Grid from '@mui/material/Grid';\r\n// project imports\r\nimport OfficeList from './OfficeList';\r\nimport OfficeSectionList from './OfficeSectionList';\r\n\r\nexport default function UsersPage() {\r\n    const [selectedOffice, setSelectedOffice] = React.useState<number>(1);\r\n\r\n    const handleSelectedOfficeChange = (officeId: number) => setSelectedOffice(officeId);\r\n\r\n    return (\r\n        <Grid container spacing={3} alignItems=\"stretch\" sx={{ height: \"95%\" }}>\r\n            <Grid item md={4}>\r\n                <OfficeList selected={selectedOffice} onSelect={handleSelectedOfficeChange} />\r\n            </Grid>\r\n            <Grid item md={8}>\r\n                <OfficeSectionList officeId={selectedOffice} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 7V3H2v18h20V7H12zM6 19H4v-2h2v2zm0-4H4v-2h2v2zm0-4H4V9h2v2zm0-4H4V5h2v2zm4 12H8v-2h2v2zm0-4H8v-2h2v2zm0-4H8V9h2v2zm0-4H8V5h2v2zm10 12h-8v-2h2v-2h-2v-2h2v-2h-2V9h8v10zm-2-8h-2v2h2v-2zm0 4h-2v2h2v-2z\"\n}), 'Business');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteOutlineOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m14.06 9.02.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\"\n}), 'EditOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 12c1.93 0 3.5-1.57 3.5-3.5S10.93 5 9 5 5.5 6.57 5.5 8.5 7.07 12 9 12zm0-5c.83 0 1.5.67 1.5 1.5S9.83 10 9 10s-1.5-.67-1.5-1.5S8.17 7 9 7zm.05 10H4.77c.99-.5 2.7-1 4.23-1 .11 0 .23.01.34.01.34-.73.93-1.33 1.64-1.81-.73-.13-1.42-.2-1.98-.2-2.34 0-7 1.17-7 3.5V19h7v-1.5c0-.17.02-.34.05-.5zm7.45-2.5c-1.84 0-5.5 1.01-5.5 3V19h11v-1.5c0-1.99-3.66-3-5.5-3zm1.21-1.82c.76-.43 1.29-1.24 1.29-2.18C19 9.12 17.88 8 16.5 8S14 9.12 14 10.5c0 .94.53 1.75 1.29 2.18.36.2.77.32 1.21.32s.85-.12 1.21-.32z\"\n}), 'SupervisorAccountOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["AddOfficeDialog","props","_useMutation","useMutation","ADD_BIR_OFFICE","_useMutation2","_slicedToArray","addBirOffice","addLoad","loading","_useMutation3","UPDATE_BIR_OFFICE","_useMutation4","updateBirOffice","updateLoad","_useMutation5","DELETE_BIR_OFFICE","_useMutation6","deleteBirOffice","deleteLoad","_React$useState","React","_React$useState2","officeName","setOfficeName","office","handleSubmitOffice","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","variables","data","officeSections","onSubmit","onClose","stop","_x","apply","arguments","handleUpdateOffice","_ref2","_callee2","_context2","officeId","handleDeleteOffice","_ref3","_callee3","_context3","_jsxs","children","_jsx","LoadOverlay","open","Dialog","maxWidth","DialogTitle","DialogContent","TextField","autoFocus","margin","name","label","value","onChange","target","fullWidth","variant","required","sx","width","DialogActions","_Fragment","Button","onClick","color","disabled","filter","section","sectionName","length","type","OfficeList","theme","useTheme","role","useAppSelector","state","auth","_useQuery","useQuery","GET_ALL_BIR_OFFICES","offices","refetch","officeDialog","setOfficeDialog","_React$useState3","_React$useState4","selected","setSelected","handleToggleDialog","Paper","height","Box","p","display","flexDirection","justifyContent","alignItems","Typography","superuser","Divider","List","maxHeight","overflowY","background","palette","grey","secondary","dark","primary","getAllBirOffices","BusinessIcon","fontSize","mb","map","ListItem","secondaryAction","IconButton","handleEditOffice","EditOutlinedIcon","ListItemButton","onSelect","ListItemText","gutterBottom","refNum","OfficerDrawer","_props$officer","REGISTER_OFFICER","registerOfficer","UPDATE_OFFICER","updateOfficer","DELETE_OFFICER","deleteOfficer","deleteMode","setDeleteMode","accountId","firstName","lastName","sectionId","roleId","positions","resetCode","formData","setFormData","officer","handleTextChange","_objectSpread","_defineProperty","handleSubmitOfficer","handleUpdateOfficer","_x2","handleConfirmDelete","handleDeleteOfficer","concat","Stack","direction","DeleteOutlineOutlinedIcon","spacing","mt","component","select","MenuItem","roleName","MenuProps","PaperProps","style","ITEM_HEIGHT","AddSectionDialog","roles","GET_ALL_ROLES","ADD_SECTION_OFFICE","addOfficeSection","UPDATE_SECTION_OFFICE","updateOfficeSection","DELETE_SECTION_OFFICE","deleteOfficeSection","setSectionName","setPositions","pos","toString","parseInt","handleDeleteSection","my","FormControl","InputLabel","id","Select","multiple","split","input","OutlinedInput","getAllRoles","officers","isAuthorized","sectionOffice","OfficeSectionList","_useAppSelector","userOffice","GET_BIR_OFFICE_BY_ID","userDialog","setUserDialog","sectionDialog","setSectionDialog","_React$useState5","_React$useState6","selectedSection","setSelectedSection","_React$useState7","_React$useState8","selectedUser","setSelectedUser","reloadList","getBirOfficeById","Grid","container","px","pb","item","md","Card","CardHeader","title","action","handleUpdateSection","ml","handleRegisterOfficer","CardContent","SupervisorAccountOutlinedIcon","user","handleSelectUser","undefined","ListItemAvatar","Avatar","charAt","AddOfficerDrawer","UsersPage","selectedOffice","setSelectedOffice","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","overridesResolver","styles","root","padding","paddingBottom","inProps","ref","useThemeProps","className","_props$component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","getCardHeaderUtilityClass","CardHeaderRoot","_extends2","cardHeaderClasses","subheader","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","getCardUtilityClass","CardRoot","overflow","_props$raised","raised","elevation"],"sourceRoot":""}